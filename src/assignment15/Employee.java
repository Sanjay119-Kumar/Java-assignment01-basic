package assignment15;

/*  QUESTION - 02 - Define a class Employee with private instance variables empid, name, and salary.
                    Create a static variable to store an integer value (initially ->0),
                    which gets incremented on instantiation.
                    This value can be used to generate empid so that every employee has an autogenerated unique empid.
                    Define a private method to generate empid.
                    Provide two constructors in the class:
                    One takes two arguments (name and salary) and the other is non-parameterized.
                    Non-parameterized constructor asks for name and salary from the user.
*/

import java.util.Scanner;

public class Employee {
    // Private instance variables for employee ID, name, and salary
    private int empid;
    private String name;
    private float salary;

    // Static variable to store and increment unique employee ID
    private static int storeValue;

    // Getter method for empid
    public int getEmpid() {
        return empid; // Returns the employee ID
    }

    // Setter method for empid
    public void setEmpid(int empid) {
        this.empid = empid; // Sets the employee ID
    }

    // Getter method for name
    public String getName() {
        return name; // Returns the employee name
    }

    // Setter method for name
    public void setName(String name) {
        this.name = name; // Sets the employee name
    }

    // Getter method for salary
    public float getSalary() {
        return salary; // Returns the employee salary
    }

    // Setter method for salary
    public void setSalary(float salary) {
        this.salary = salary; // Sets the employee salary
    }

    // Getter method for static storeValue
    public static int getStoreValue() {
        return storeValue; // Returns the current storeValue
    }

    // Setter method for static storeValue
    public static void setStoreValue(int storeValue) {
        Employee.storeValue = storeValue; // Sets the storeValue
    }

    // Private method to generate unique empid
    private void generateEmpid() {
        this.empid = storeValue; // Assigns current storeValue to empid
        storeValue++; // Increments storeValue for the next employee
    }

    // Parameterized constructor taking name and salary as arguments
    public Employee(String name, float salary) {
        this.name = name; // Sets the employee name
        this.salary = salary; // Sets the employee salary
        generateEmpid(); // Calls method to generate unique empid
    }

    // Non-parameterized constructor that prompts user for name and salary
    public Employee() {
        Scanner sc = new Scanner(System.in); // Creates scanner object to take input from user
        System.out.println("Enter name"); // Prompts user to enter name
        name = sc.nextLine(); // Reads and sets the employee name
        System.out.println("Enter Salary"); // Prompts user to enter salary
        salary = sc.nextFloat(); // Reads and sets the employee salary
        generateEmpid(); // Calls method to generate unique empid
        System.out.println("Salary of employee - " + salary); // Prints entered salary to console
    }

    // Method to display employee details
    public void showEmployeeDetail() {
        System.out.println("**************Employee Detail******************" + "\n" +
                "ID - " + empid + "\n" + // Displays the employee ID
                "Name - " + name + "\n" + // Displays the employee name
                "Salary - " + salary // Displays the employee salary
        );
    }
}
